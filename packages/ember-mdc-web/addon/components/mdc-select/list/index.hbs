{{#in-element this.contentContainerElement insertBefore=null}}
	<span
		class='mdc-abstract-dropdown__content mdc-select__menu mdc-menu mdc-menu-surface'
		{{! Add styling classes as necessary }}
		{{has-class-if
			(and this.open (not this.disabled))
			'mdc-menu-surface--open'
		}}
		id='{{this.dropdownId}}-content'
		{{! Monitor changes to scroll position }}
		{{capture-on 'scroll' this.onAncestorScroll}}
		{{! Re-calculate colours as necessary }}
		{{on-args-change this.recalcStyles @palette}}
		{{! Store reference to the element for DOM manipulation }}
		{{store-element this.storeElement}}
		{{! HTML attributes added in the calling template }}
		...attributes
	>
		<ul
			class='mdc-list'
			{{! Accessibility stuff }}
			role='menu'
			aria-hidden='true'
			aria-orientation='vertical'
			tabindex='-1'
		>
			{{#if @allowEmpty}}
				<this.emptyOptionComponent
					@selectControls={{this.controls}}
					@palette={{@palette}}
					value=''
				/>
			{{/if}}
			{{yield
				(hash
					Divider=(component
						this.dividerComponent
						selectControls=this.controls
						palette=@palette
					)
					Option=(component
						this.optionComponent
						selectControls=this.controls
						palette=@palette
					)
				)
			}}
		</ul>
	</span>
{{/in-element}}