{{#if (has-block 'items')}}
	<MdcAbstractDropdown
		@customComponents={{(hash trigger=(component this.triggerComponent))}}
		@xAlign='left'
		@xOffset='0'
		@yAlign='bottom'
		@yOffset='0'
		@equalTriggerContentWidth={{false}}
		@triggerEvent={{@triggerEvent}}
		@palette={{@palette}}
		{{! Attach/detach event handler as necessary }}
		{{on-args-change this.listenToClicks this.triggerEvent}}
		{{! Store reference to the element for DOM manipulation }}
		{{store-element this.storeElement}}
		{{! HTML attributes added in the calling template }}
		...attributes
	>
		<:trigger as |Trigger|>
			<Trigger
				class='mdc-list-item'
				@doubleLine={{@doubleLine}}
				@itemControls={{this.itemControls}}
			>
				{{yield to='trigger'}}
			</Trigger>
		</:trigger>

		<:content as |Content|>
			{{yield Content to='items'}}
		</:content>
	</MdcAbstractDropdown>
{{else}}
	<MdcList::Item
		class='mdc-list-item'
		@doubleLine={{@doubleLine}}
		@palette={{@palette}}
		{{! React to trigger events }}
		{{on this.triggerEvent (fn this.onTriggerEvent (not this.open))}}
		{{! Attach/detach event handler as necessary }}
		{{on-args-change this.listenToClicks this.triggerEvent}}
		{{! Store reference to the element for DOM manipulation }}
		{{store-element this.storeElement}}
		{{! HTML attributes added in the calling template }}
		...attributes
	>
		{{yield}}
	</MdcList::Item>
{{/if}}