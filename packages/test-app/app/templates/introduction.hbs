{{! template-lint-disable no-inline-styles }}
{{page-title 'Introduction'}}
<div class='w-full h-full p-5 flex flex-row justify-start items-start'>
	<MdcCard class='w-full max-w-full max-h-full'>
		<:header as |Header|>
			<Header class='flex flex-row justify-between items-center border-b'>
				<:headline as |Headline|>
					<Headline @text='Introductions' />
				</:headline>
				<:subheadline as |SubHeadline|>
					<SubHeadline
						@text='Raison d&apos;etre, Design Goals, etc.'
					/>
				</:subheadline>
			</Header>
		</:header>
		<:content as |Content|>
			<Content class='overflow-y-auto'>
				<article class='twyr-prose'>
					<h4 class='twyr-prose'>Raison d'etre</h4>
					<p class='twyr-prose'>
						<a
							class='twyr-prose'
							href='https://en.wikipedia.org/wiki/Material_Design'
							target='_blank'
							rel='noopener noreferrer'
						>Material Design</a>
						was originally announced on June 25th, 2014. Since then,
						Google has moved on - towards
						<a
							class='prose'
							href='https://material.io/'
							target='_blank'
							rel='noopener noreferrer'
						>"Material You"</a>
						- and is aiming to provide the developer community with
						reference implementations of the new design language.
						This effort remains a work in progress, however, and
						reference implementations (for platforms other than
						Android) are
						<a
							class='prose'
							href='https://m3.material.io/libraries/additional'
						>nowhere close to being complete</a>
						- at this point, what we have is an intermediate version
						called
						<a
							class='prose'
							href='https://material-components.github.io/material-components-web-catalog/'
							target='_blank'
							rel='noopener noreferrer'
						> Material Design Components (MDC) for the Web</a>
					</p>

					<p class='prose max-w-none'>
						In the same period, Ember, too, has moved on - towards
						Octane, 4.0, and beyond - and with it, "The Ember Way"
						itself has evolved significantly. Ember developers
						expect current addons to export components based on
						native JS classes, to be derived from
						@glimmer/component, be modifier/helper friendly, use
						named blocks, etc.
					</p>

					<p class='prose max-w-none'>
						This addon aims to provide an implementation of MDC for
						the Web using the latest Ember features - with no
						attempt at backwards compatibility with pre-4.0 versions
						of Ember. Hopefully, MDC for the Web is close enough to
						the eventual Material You for the Web - and, hopefully,
						this addon can continue to co-evolve to provide a full
						implementation of the design specification as and when
						Google officially releases the reference implementation.
					</p>

					<h4 class='twyr-prose'>Goals</h4>
					<p class='twyr-prose'>HTML / CSS / Code:</p>
					<ol class='twyr-prose'>
						<li class='prose max-w-none'>The component's HTML should
							be as close to MDC Web as possible - it should, as
							far as possible, look as if it was copy-pasted from
							the demo site.</li>
						<li class='prose max-w-none'>The component's HTML should
							use the same CSS classes as MDC Web</li>
						<li class='prose max-w-none'>The JS should, as far as
							possible, exactly mimic the functionality provided
							in the demo site.</li>
						<li class='prose max-w-none'>The JS should be
							"idiomatic" Ember 4.0 - native JS classes derived
							from @glimmer/component, should use tracking /
							getters, etc.</li>
					</ol>

					<p
						class='prose max-w-none'
						style='margin-bottom: 0px;'
					>Tests and Documentation:</p>
					<ol class='twyr-prose'>
						<li class='prose max-w-none'>Aim for 100% coverage in
							Tests</li>
						<li class='prose max-w-none'>Use ember-try to test for
							every version since 4.0</li>
						<li class='prose max-w-none'>Document clearly and make
							DevEx as good as possible</li>
					</ol>

					<p
						class='prose max-w-none'
						style='margin-bottom: 0px;'
					>Tooling:</p>
					<ol class='twyr-prose'>
						<li class='prose max-w-none'>Build a V2-format addon -
							aim for
							<a
								class='twyr-prose'
								href='https://github.com/embroider-build/embroider/blob/main/ADDON-AUTHOR-GUIDE.md#support-level-embroider-native'
								target='_blank'
								rel='noopener noreferrer'
							>Embroider "native"</a>
							level.</li>
						<li class='prose max-w-none'>Lint / Test as much as
							possible, and as often as possible, to enforce code
							styling, etc.</li>
						<li class='prose max-w-none'>Enable CI / CD to
							catch/prevent as many issues as possible</li>
					</ol>

					<h4 class='prose max-w-none'>Acknowledgements</h4>
					<p class='twyr-prose'>
						The Ember MDC Web Addon borrows concepts, ideas, code,
						etc. from several open source projects on Github and
						elsewhere. This section is an acknowledgement of the
						major influences on the codebase.
					</p>

					<ol class='twyr-prose'>
						<li class='prose max-w-none'>The Ember Core team, for
							providing us with a cool framework
						</li>
						<li class='prose max-w-none'>The main ideas on how to
							implement this addon are, very obviously, derived
							from
							<a
								class='prose'
								href='https://miguelcobain.github.io/ember-paper/'
								target='_blank'
								rel='noopener noreferrer'
							>Ember Paper</a>
							and
							<a
								class='prose'
								href='https://www.ember-bootstrap.com/'
							>Ember Bootstrap</a>. A huge shoutout to
							<a
								class='prose'
								href='https://github.com/miguelcobain'
								target='_blank'
								rel='noopener noreferrer'
							>Miguel Andrade</a>
							and
							<a
								class='prose'
								href='https://github.com/simonihmig'
								target='_blank'
								rel='noopener noreferrer'
							>Simon Ihmig</a>, respectively, for being the OGs.
						</li>

						<li class='prose max-w-none'>
							The idea of an "abstract dropdown" component that is
							re-used in the menu, select, and other components
							is, obviously, borrowed from
							<a
								class='prose'
								href='https://ember-basic-dropdown.com'
								target='_blank'
								rel='noopener noreferrer'
							>Ember Basic Dropdown</a>. Lots of thanks to
							<a
								class='prose'
								href='https://github.com/cibernox'
								target='_blank'
								rel='noopener noreferrer'
							>Miguel Camba</a>
							for the wonderful "ember-power-" set of Addons.
						</li>

						<li class='prose max-w-none'>
							All EMDC Web components benefit immensely from using
							the modifier functionality enabled by the
							<a
								class='twyr-prose'
								href='https://github.com/ember-modifier/ember-modifier'
								target='_blank'
								rel='noopener noreferrer'
							>ember-modifier</a>
							addon. Thanks to
							<a
								class='twyr-prose'
								href='https://github.com/chriskrycho'
								target='_blank'
								rel='noopener noreferrer'
							>Chris Krycho</a>
							for making life easier for the rest of us
						</li>

						<li class='prose max-w-none'>
							Several pieces of code, scattered throughout the
							codebase, have been "borrowed" [i.e., copied
							outright] from several repositories on Gihub,
							Gitlab, etc. They have been acknowledged in the
							code.
						</li>
					</ol>

					<p class='prose max-w-none'>
						If I've forgotten to acknowledge your code in this
						codebase, it is an honest mistake - please let me know
						and I'll add it to the list above as soon as I can.
					</p>
				</article>
			</Content>
		</:content>
	</MdcCard>
</div>